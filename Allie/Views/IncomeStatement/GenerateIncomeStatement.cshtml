@using AllieService
@using AllieEntity
@using AllieService.ServiceInterfaces
@{
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
@section title{Generate income statement}
<div align="center" class="container"> 
    @{
        IncomeStatement statement = (IncomeStatement)Session["Statement"];
        List<Transaction> transactionList = (List<Transaction>)Session["transactionList"];

        AccountType incomeType = ServiceFactory.GetAccountTypeServices().Get("Income");
        AccountType expenseType = ServiceFactory.GetAccountTypeServices().Get("Expense");

        List<TransactionDetail> detailList = new List<TransactionDetail>();
        ITransactionDetailServices service = ServiceFactory.GetTransactionDetailServices();
        IAccountServices accService = ServiceFactory.GetAccountServices();

        string startmonth = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[statement.Start.Month-1];
        string endmonth = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[statement.End.Month-1];
    }
    <table>
        <tr>
            <td align="center">
                @{ 
                    string companyName = ServiceFactory.GetCompanyServices().Get((int)Session["CompanyId"]).CompanyName;
                }
                @companyName<br/>
                Income Statement<br/>
                from @startmonth @statement.Start.Year to @endmonth @statement.End.Year
            </td>
        </tr>
    </table>
    <table class="table table-striped">
        <tr>
            <td align="left">Revenue</td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
            
        @{
            double revBalance = 0;
            foreach (Transaction t in transactionList)
            {

                List<TransactionDetail> detail = (List<TransactionDetail>)service.GetByAccount_IncomeType(incomeType.Id, t.Id);
                foreach (TransactionDetail d in detail)
                {
                    Account a = accService.Get(d.AccountId);
                    <tr>
                        <td></td>
                        <td>@t.TransactionDescription for account @a.AccountDescription</td>
                        <td>@d.Amount</td>
                        <td></td>
                    </tr>
                    revBalance += d.Amount;
                }
            }
            <tr>
                <td></td>
                <td><strong><i>Total Revenue: </i></strong></td>
                <td></td>
                <td>@revBalance <input type="hidden" name="revenue" value="@revBalance" /> </td>
            </tr>
            <tr>
                <td align="left">Expense</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            double expBalance = 0;
            foreach (Transaction t in transactionList)
            {
                List<TransactionDetail> detail = (List<TransactionDetail>)service.GetByAccount_ExpenseType(expenseType.Id, t.Id);
                foreach (TransactionDetail d in detail)
                {
                    Account a = accService.Get(d.AccountId);
                <tr>
                    <td></td>
                    <td>@t.TransactionDescription for account @a.AccountDescription</td>
                    <td>@d.Amount</td>
                    <td></td>
                </tr>
                    expBalance += d.Amount;
                }
            }
            <tr>
                <td></td>
                <td><strong><i>Total Expense: </i></strong></td>
                <td></td>
                <td>@expBalance <input type="hidden" name="expense" value="@expBalance" /></td>
            </tr>
            double balance = revBalance - expBalance;
            <input type="hidden" name="balance" value="@balance" />
            <tr>
                <td align="left">Net Income</td>
                <td></td>
                <td></td>
                <td>
                    @if(balance > 0)
                    {
                        <label style="color: green">@balance (Profit)</label>
                    }
                    @if (balance < 0)
                    {
                        <label style="color: red">@balance (Loss)</label>
                    }
                </td>
            </tr>
            }
    </table>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <input type="hidden" name="Description" value="@companyName Income Statement from @startmonth @statement.Start.Year to @endmonth @statement.End.Year">
        <input type="hidden" name="total" value="@balance">
        <input type="submit" class="btn btn-default" value="save income statement"/> <br /><br /><br />
    }
    <a href="/IncomeStatement/Index">IncomeStament list</a>
</div>