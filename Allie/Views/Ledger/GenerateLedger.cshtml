@using AllieEntity
@using AllieService
@using AllieService.ServiceInterfaces
@{
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

@section title{generate Ledger}
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/TransactionEdit.js"></script>

<div align="center" class="container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div align="center">
                @{ 
                    Ledger led = (Ledger)Session["Ledger"];
                    Journal jour = (Journal)Session["Journal"];
                    List<Account> accList = (List<Account>)Session["AccountList"];
                    string month = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[led.LedgerPeriod.Month - 1];
                    List<Transaction> tranList = (List<Transaction>)ServiceFactory.GetTransactionServices().GetByJournal(jour.Id);

                    ITransactionDetailServices detailServ = ServiceFactory.GetTransactionDetailServices();
                    ITransactionTypeServices typeServ = ServiceFactory.GetTransactionTypeServices();
                    IAccountServices accServ = ServiceFactory.GetAccountServices();
                }
                <h3>Ledger based on Journal @jour.JournalDescription</h3><br/>
                <i>Form month of @month  @led.LedgerPeriod.Year</i><br />
                Ledger Description: &nbsp; <textarea cols="50" rows="2" name="Description" id="Description"></textarea><label style="color: red">*</label><br />
                <p hidden id="descError"></p>
                <hr/><br/>
                <input type="hidden" name="JournalId" value="@jour.Id" />


                @foreach(Account account in accList)
                {
                    double balance = 0;
                    <i>Account: @account.AccountDescription</i><br />
                    <table class="table table-striped table-bordered">
                        <tr>
                            <th>Date</th>
                            <th>Description</th>
                            <th>Debit</th>
                            <th>Credit</th>
                            <th>Balance</th>
                        </tr>
                        @foreach(Transaction t in tranList)
                        {
                            List<TransactionDetail> detail = (List<TransactionDetail>)detailServ
                                .GetByAccount_Transaction(t.Id, account.Id, jour.Id);
                            foreach(TransactionDetail d in detail)
                            {
                                <tr>
                                    <td>@t.TransactionDate.ToShortDateString()</td>
                                    <td>@t.TransactionDescription</td>
                                    @{ 

                                        if(typeServ.Get(d.TransactionType).Type == "Debit")
                                        {
                                            <td>@d.Amount</td>
                                            <td></td>
                                            string action = accServ.GetRollBackAction(account.Id, "Credit");
                                            if (action == "Increase")
                                            {
                                                balance += d.Amount;
                                            }
                                            else
                                            {
                                                balance -= d.Amount;
                                            }
                                            <td>@balance</td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td>@d.Amount</td>
                                            string action = accServ.GetRollBackAction(account.Id, "Debit");
                                            if (action == "Increase")
                                            {
                                                balance += d.Amount;
                                            }
                                            else
                                            {
                                                balance -= d.Amount;
                                            }
                                            <td>@balance</td>
                                        }
                                    }
                                </tr>
                            }
                        }
                    </table>
                    <br /><hr />
                    
                }
                <br /><input type="submit" class="btn btn-danger" value="Save Ledger" id="submit" disabled /><br /><br />
            </div>
            
            }
        @Html.ActionLink("Back to List", "Index") |
        @Html.ActionLink("To dashboard", "Index", "Company")<br /><br /><br />
    </div>