@model AllieEntity.Company

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#submit').click(function () {

                $(".error").hide();
                var hasError = false;



                var ComNamReg = /^.{4,100}$/;

                var ComName = $("#CompanyName").val();
                if (ComName == '') {
                    $("#CompanyName").after('<span class="error">Enter Company Name.</span>');
                    hasError = true;
                }

                else if (!ComNamReg.test(ComName)) {
                    $("#CompanyName").after('<span class="error">Enter a valid Company Name</span>');
                    hasError = true;
                }



                var ComLocReg = /^.{4,200}$/;

                var ComLocation = $("#Location").val();
                if (ComLocation == '') {
                    $("#Location").after('<span class="error">Please enter Location.</span>');
                    hasError = true;
                }

                else if (!ComLocReg.test(ComLocation)) {
                    $("#Location").after('<span class="error">Please enter a valid Location</span>');
                    hasError = true;
                }


                var ComPhnReg = /^((?:\S)){7,}$/;

                var ComPhone = $("#Phone").val();
                if (ComPhone == '') {
                $("#Phone").after('<span class="error">Amount required</span>');
                hasError = true;
                }

                else if (!ComPhnReg.test(ComPhone)) {
                $("#Phone").after('<span class="error">Please enter a valid number</span>');
                hasError = true;
                }

                var ComEmailReg = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;

                var ComEmail = $("#Email").val();
                if (ComEmail == '') {
                    $("#Email").after('<span class="error">Amount required</span>');
                    hasError = true;
                }

                else if (!ComEmailReg.test(ComEmail)) {
                    $("#Email").after('<span class="error">Please enter a valid Email Address</span>');
                    hasError = true;
                }

                var ComRevReg = /^\d*$/;

                var ComRevenue = $("#Revenue").val();
                if (ComRevenue == '') {
                    $("#Revenue").after('<span class="error">Amount required</span>');
                    hasError = true;
                }

                else if (!ComRevReg.test(ComRevenue)) {
                    $("#Revenue").after('<span class="error">Please enter Revenue</span>');
                    hasError = true;
                }

                var ComExpReg = /^\d*$/;

                var ComExpense = $("#Expense").val();
                if (ComExpense == '') {
                    $("#Expense").after('<span class="error">Amount required</span>');
                    hasError = true;
                }

                else if (!ComExpReg.test(ComExpense)) {
                    $("#Expense").after('<span class="error">Please enter Expense</span>');
                    hasError = true;
                }

                var ComProReg = /^\d*$/;

                var ComProfit = $("#Profit").val();
                if (ComProfit == '') {
                    $("#Profit").after('<span class="error">Amount required</span>');
                    hasError = true;
                }

                else if (!ComProReg.test(ComProfit)) {
                    $("#Profit").after('<span class="error">Please enter Profit</span>');
                    hasError = true;
                }


            if (hasError == true) { return false; }


            

        });
    });
    </script>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Company</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control", @id="CompanyName" } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @id="Location" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" , @id="Phone"} })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control", @id="Email" } })
                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.TotalRevenue, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalRevenue, new { htmlAttributes = new { @class = "form-control", @id="Revenue" } })
                    @Html.ValidationMessageFor(model => model.TotalRevenue, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.TotalExpense, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalExpense, new { htmlAttributes = new { @class = "form-control" , @id="Expense"} })
                    @Html.ValidationMessageFor(model => model.TotalExpense, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Profit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Profit, new { htmlAttributes = new { @class = "form-control", @id="Profit" } })
                    @Html.ValidationMessageFor(model => model.Profit, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" id="submit"/>
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Home")
    </div>
</body>
</html>
